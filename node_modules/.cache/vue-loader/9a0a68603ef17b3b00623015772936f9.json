{"remainingRequest":"/Users/mei/github/vue3/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/mei/github/vue3/src/LifeCycle.vue?vue&type=style&index=0&id=0b12e6a1&scoped=true&lang=css","dependencies":[{"path":"/Users/mei/github/vue3/src/LifeCycle.vue","mtime":1615863599835},{"path":"/Users/mei/github/vue3/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mei/github/vue3/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mei/github/vue3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mei/github/vue3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mei/github/vue3/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zdmdJbWd7CiAgd2lkdGg6IDEwMHZ3Owp9Cg=="},{"version":3,"sources":["/Users/mei/github/vue3/src/LifeCycle.vue"],"names":[],"mappings":";AAgGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACd","file":"/Users/mei/github/vue3/src/LifeCycle.vue","sourceRoot":"","sourcesContent":["<template>\n<div>\n    <ul class=\"square\">\n      <strong>除beforeCreate和created之外，我們可以在設置方法中訪問9個舊的生命週期掛鉤</strong>\n      <li>onBeforeMount –在安裝開始之前調用</li>\n      <li>onMounted –在安裝組件時調用</li>\n      <li>onBeforeUpdate –在反應性數據更改時以及重新呈現之前調用</li>\n      <li>onUpdated –重新渲染後調用</li>\n      <li>onBeforeUnmount –在銷毀Vue實例之前調用</li>\n      <li>onUnmount –在實例銷毀後調用</li>\n      <li>onActivated –激活保持活動的組件時調用</li>\n      <li>onDeactivated –停用保持活動的組件時調用</li>\n      <li>onErrorCaptured –從子組件捕獲錯誤時調用</li>\n    </ul>\n    <ul class=\"square\">\n      <strong>Vue2 to Vue3</strong>\n      <li>beforeCreate -> use setup()</li>\n      <li>created -> use setup()</li>\n      <li>beforeMount -> onBeforeMount</li>\n      <li>mounted -> onMounted</li>\n      <li>beforeUpdate -> onBeforeUpdate</li>\n      <li>updated -> onUpdated</li>\n      <li>beforeDestroy -> onBeforeUnmount</li>\n      <li>destroyed -> onUnmounted</li>\n      <li>errorCaptured -> onErrorCaptured</li>\n    </ul>\n    <div id=\"lifeHook\">\n        <!-- <button @click=\"increment\">\n          Count is: {{ state.count }}, double is: {{ state.double }}\n        </button>\n        <div v-bind=\"increment\">watchEffect CurrentWidth is {{ state.currentWidth }}</div> -->\n        <!-- <div v-html=\"CurrentWidth\"></div> -->\n        {{ id }}\n        {{ name }}\n    </div>\n    <img alt=\"lifeCycleSvg\" class=\"svgImg\" :src=\"require('@/assets/svg/lifeCycle-Hooks.svg')\">\n    <ul class=\"square\">\n      <strong>總結</strong>\n      <li>在 Vue2.x 中通過補丁形式引入 Composition API ，進行 Vue2.x 和 Vue3.x 的回撥函式混用時： Vue2.x 的回撥函式會相對先執行 ，比如： mounted 優先於 onMounted 。</li>\n      <li>在 Vue3.x 中，爲了相容 Vue2.x 的語法，所有舊的生命週期函式得到保留（除了 beforeDestroy 和 destroyed ）。當生命週期混合使用時： Vue3.x 的生命週期相對優先於 Vue2.x 的執行 ，比如： onMounted 比 mounted 先執行。 </li>\n      <li>通過對比可以得出： 當你的主版本是哪個，當生命週期混用時，誰的回撥鉤子就會相對優先執行。</li>\n    </ul>\n</div>\n</template>\n\n<script>\nimport {\n  ref, watchEffect, onBeforeMount, onMounted, onBeforeUpdate, onUpdated, onBeforeUnmount, onUnmounted,\n  onRenderTracked, onRenderTriggered, onActivated, onDeactivated, onErrorCaptured\n} from 'vue'\n\nexport default {\n  name: 'LifeCycle',\n  setup () {\n    const id = ref(1)\n    console.log('setup')\n    watchEffect(() => { console.log('watchEffect') })\n    onBeforeMount(() => { console.log('onBeforeMount') })\n    onMounted(() => { console.log('onMounted') })\n    onBeforeUpdate(() => { console.log('onBeforeUpdate') })\n    onUpdated(() => { console.log('onUpdated') })\n    onBeforeUnmount(() => { console.log('onBeforeUnmount') })\n    onUnmounted(() => { console.log('onUnmounted') })\n    onActivated(() => { console.log('onActivated') })\n    onDeactivated(() => { console.log('onDeactivated') })\n    onErrorCaptured(() => { console.log('onErrorCaptured') })\n    onRenderTracked(({ key, target, type }) => {\n      console.log('onRenderTracked')\n      console.log({ key, target, type })\n    })\n    onRenderTriggered((e) => {\n      console.log('onRenderTriggered')\n      console.log(Object.values(e))\n    })\n    setTimeout(() => { id.value = 2 }, 2000)\n    return { id }\n  },\n  data () {\n    console.log('data')\n    return { name: 'LifeCycle' }\n  },\n  beforeCreate () { console.log('beforeCreate') },\n  created () { console.log('created') },\n  beforeMount () { console.log('beforeMount') },\n  mounted () {\n    console.log('mounted')\n    setTimeout(() => { this.id = 3 }, 4000)\n  },\n  beforeUpdate () { console.log('beforeUpdate') },\n  updated () { console.log('updated') },\n  beforeUnmount () { console.log('beforeUnmount') },\n  unmounted () { console.log('unmounted') }\n}\n</script>\n\n<style scoped>\n.svgImg{\n  width: 100vw;\n}\n</style>\n"]}]}