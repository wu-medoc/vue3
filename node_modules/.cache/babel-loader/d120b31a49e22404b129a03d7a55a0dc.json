{"remainingRequest":"/Users/mei/github/vue3/node_modules/babel-loader/lib/index.js!/Users/mei/github/vue3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mei/github/vue3/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/mei/github/vue3/src/components/Rendering/ConditionalRendering.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/mei/github/vue3/src/components/Rendering/ConditionalRendering.vue","mtime":1615054781093},{"path":"/Users/mei/github/vue3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mei/github/vue3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mei/github/vue3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mei/github/vue3/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDb25kaXRpb25hbFJlbmRlcmluZycsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGF3ZXNvbWU6IHRydWUsCiAgICAgIGNvZGVWaWY6ICc8cCB2LWlmPSJhd2Vzb21lIj5WdWUgaXMgYXdlc29tZSE8L3A+JywKICAgICAgY29kZVZlbHNlOiAnPGRpdiB2LWlmPSJNYXRoLnJhbmRvbSgpID4gMC41Ij5Ob3cgeW91IHNlZSBtZTwvZGl2PjxkaXYgdi1lbHNlPk5vdyB5b3UgZG9uXCd0PC9kaXY+JywKICAgICAgY29kZVZlbHNlaWY6ICc8ZGl2IHYtaWY9InR5cGUgPT09IFwnQVwnIj5BPC9kaXY+PGRpdiB2LWVsc2UtaWY9InR5cGUgPT09IFwnQlwnIj5CPC9kaXY+PGRpdiB2LWVsc2UtaWY9InR5cGUgPT09IFwnQ1wnIj5DPC9kaXY+PGRpdiB2LWVsc2U+Tm90IEEvQi9DPC9kaXY+JywKICAgICAgY29kZVZzaG93OiAnPHAgdi1zaG93PSJhd2Vzb21lIj5IZWxsbyE8L3A+JwogICAgfTsKICB9Cn07"},{"version":3,"sources":["/Users/mei/github/vue3/src/components/Rendering/ConditionalRendering.vue"],"names":[],"mappings":"AA8CA,eAAe;AACb,EAAA,IAAI,EAAE,sBADO;AAEb,EAAA,IAFa,kBAEL;AACN,WAAO;AACL,MAAA,OAAO,EAAE,IADJ;AAEL,MAAA,OAAO,EAAE,uCAFJ;AAGL,MAAA,SAAS,EAAE,sFAHN;AAIL,MAAA,WAAW,EAAE,6IAJR;AAKL,MAAA,SAAS,EAAE;AALN,KAAP;AAOF;AAVa,CAAf","sourcesContent":["<template>\n    <div class=\"demo\">\n        <h3>有條件渲染</h3>\n        <strong>v-if</strong>\n        <p v-if=\"awesome\">Vue is awesome!</p>\n        <div v-text=\"codeVif\" class=\"codeText\"></div>\n\n        <strong>v-else</strong>\n        <div v-if=\"Math.random() > 0.5\">\n            Now you see me\n        </div>\n        <div v-else>\n            Now you don't\n        </div>\n        <div v-text=\"codeVelse\" class=\"codeText\"></div>\n\n        <strong>v-else-if</strong>\n        <div v-if=\"type === 'A'\">\n            A\n        </div>\n        <div v-else-if=\"type === 'B'\">\n            B\n        </div>\n        <div v-else-if=\"type === 'C'\">\n            C\n        </div>\n        <div v-else>\n            Not A/B/C\n        </div>\n        <div v-text=\"codeVelseif\" class=\"codeText\"></div>\n\n        <strong>v-show</strong>\n        <p v-show=\"awesome\">Hello!</p>\n        <div v-text=\"codeVshow\" class=\"codeText\"></div>\n        <p class=\"text-fix\">帶有的元素v-show將始終呈現並保留在DOM中；v-show僅切換display元素的CSS屬性。<br>v-show不支持&lt;template&gt;元素，也不與v-else配合使用</p>\n        <ul class=\"square\">\n            <li>v-if是“真正的”條件渲染，因為它確保了條件塊中的事件監聽器和子組件在切換過程中被正確地銷毀和重新創建。</li>\n            <li>v-if也是懶惰的：如果條件在初始渲染時為false，它不會做任何事情-條件塊不會被渲染，直到條件第一次變成真。</li>\n            <li>相比之下，v-show要簡單合併-無論初始條件如何，元素都會被渲染，並基於CSS進行切換。</li>\n            <li>因此，如果您需要經常切換某些元素，最好選擇v-show，如果條件在運行時不太可能 改變，則選擇v-if。</li>\n            <li>不建議同時使用v-if和v-for。</li>\n            <li>當v-if和v-for同時使用在同一個元素上時，v-if將首先被評估。</li>\n        </ul>\n    </div>\n</template>\n<script>\nexport default {\n  name: 'ConditionalRendering',\n  data () {\n    return {\n      awesome: true,\n      codeVif: '<p v-if=\"awesome\">Vue is awesome!</p>',\n      codeVelse: '<div v-if=\"Math.random() > 0.5\">Now you see me</div><div v-else>Now you don\\'t</div>',\n      codeVelseif: '<div v-if=\"type === \\'A\\'\">A</div><div v-else-if=\"type === \\'B\\'\">B</div><div v-else-if=\"type === \\'C\\'\">C</div><div v-else>Not A/B/C</div>',\n      codeVshow: '<p v-show=\"awesome\">Hello!</p>'\n    }\n  }\n}\n</script>\n"],"sourceRoot":""}]}